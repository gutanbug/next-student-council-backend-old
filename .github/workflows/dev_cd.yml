# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# Next Development with CD
name: Dev_CD

on:
  push:
    branches: [ "dev_deploy" ]

permissions:
  contents: read

jobs:
  check_repo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check Repo
        run: |
          if [ "$GITHUB_REPOSITORY" != "YOUR_USER/YOUR_REPO_NAME" ]; then
            echo "::set-output name=CD_SKIP::true"
          else
            echo "::set-output name=CD_SKIP::false"
          fi

  build:
    runs-on: ubuntu-latest
    needs: check_repo
    if: ${{ needs.check_repo.outputs.CD_SKIP != 'true' }}
    environment: dev
    steps:

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Make test properties
        env:
          PROPERTIES: ${{ secrets.PROPERTIES_TEST }}
        run: |
          mkdir -p ./src/test/resources && cd "$_"
          touch ./application.yml
          echo $PROPERTIES | base64 --decode > application.yml
        shell: bash

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build

      - name: Docker build
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          REPO: ${{ secrets.DOCKER_REPO }}
        run: |
          docker build -t $USERNAME/$REPO:{$GITHUB_SHA::7} -t $USERNAME/$REPO:latest .

      - name: Docker push
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          REPO: ${{ secrets.DOCKER_REPO }}
        run: |
          docker login -u $USERNAME -p $PASSWORD
          docker push $USERNAME/$REPO:${GITHUB_SHA::7}
          docker push $USERNAME/$REPO:latest

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@master
        env:
          REPO: ${{ secrets.DOCKER_REPO }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.NEXT_PRIVATE_PEM_KEY }}
          envs: GITHUB_SHA,REPO
          script: |
            ./deploy.sh ${{ secrets.DOCKER_USERNAME }} $REPO ${GITHUB_SHA::7}

  skip_cd:
    needs: check_repo
    if: ${{ needs.check_repo.outputs.CD_SKIP == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Skip CD
        run: |
          echo "Cd will be terminated soon..."
          exit0
    
          
      


